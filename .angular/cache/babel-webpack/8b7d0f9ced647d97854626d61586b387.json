{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { registerAction, registerFailureAction, registerSuccessAction } from './register.action';\nconst initialState = {\n  isSubmitting: false,\n  currentUser: null,\n  validationErrors: null,\n  isLoggedIn: null\n};\nconst authReducer = createReducer(initialState, on(registerAction, state => Object.assign(Object.assign({}, state), {\n  isSubmitting: true,\n  validationErrors: null\n})), on(registerSuccessAction, (state, action) => Object.assign(Object.assign({}, state), {\n  isSubmitting: false,\n  isLoggedIn: true,\n  currentUser: action.currentUser\n})), on(registerFailureAction, (state, action) => Object.assign(Object.assign({}, state), {\n  isSubmitting: false,\n  validationErrors: action.errors\n})));\nexport function reducers(state, action) {\n  return authReducer(state, action);\n}","map":null,"metadata":{},"sourceType":"module"}