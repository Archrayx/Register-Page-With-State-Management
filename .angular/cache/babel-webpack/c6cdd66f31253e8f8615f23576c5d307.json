{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { select } from '@ngrx/store';\nimport { registerAction } from 'src/app/auth/store/actions/register.action';\nimport { isSubmittingSelector, validationErrorsSelector } from './../../auth/store/actions/selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../backend-error-messages/backend-error-messages.component\";\n\nfunction RegisterComponent_mc_backend_error_messages_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mc-backend-error-messages\", 13);\n    i0.ɵɵpipe(1, \"async\");\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"backendErrors\", i0.ɵɵpipeBind1(1, 1, ctx_r0.backendErrors$));\n  }\n}\n\nconst _c0 = function () {\n  return [\"login\"];\n};\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    //<-- dollar sign is used for streaming variables. or vars that are for http protocol and rxjs. also denotes as an observable\n    constructor(fb, store // private authService: AuthService\n    ) {\n      this.fb = fb;\n      this.store = store;\n    }\n\n    ngOnInit() {\n      this.initializeForm();\n      this.initializeValues();\n    }\n\n    initializeValues() {\n      //use .pipe. new version of rxjs makes using alt functions easier for chaining with 'pipe operators'\n      //for example before it would be ==> this.store.select(stuff).filter.map.etc..\n      //new version allows for in-pipe chaining ==>\n      //.pipe(select(stuff),\n      //       map((stuff:type)=> \"do something\")),\n      //        etc...())\n      this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector));\n      this.backendErrors$ = this.store.pipe(select(validationErrorsSelector));\n      console.log('isSubmitting$', this.isSubmitting$);\n    }\n\n    initializeForm() {\n      console.log('Initialize Form');\n      this.form = this.fb.group({\n        username: ['', Validators.required],\n        email: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n\n    onSubmit() {\n      console.log('Submit', this.form.value, this.form.valid);\n      const request = {\n        user: this.form.value\n      };\n      this.store.dispatch(registerAction({\n        request\n      })); //NOT GOOD PRACTICE TO CALL HTTP REQUEST IN COMPONENT\n      // this.authService\n      //   .register(this.form.value)\n      //   .subscribe((currentUser: CurrentUserInterface) => {\n      //     console.log('current user: ', currentUser);\n      //   });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 23,\n    vars: 9,\n    consts: [[1, \"auth-page\"], [1, \"container-page\"], [1, \"row\"], [1, \"col\"], [1, \"error-text\"], [3, \"backendErrors\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"User\", \"formControlName\", \"username\", 1, \"form-control\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\"], [3, \"routerLink\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-secondary\", 3, \"disabled\"], [3, \"backendErrors\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \" Sign Up \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 4);\n        i0.ɵɵtemplate(7, RegisterComponent_mc_backend_error_messages_7_Template, 2, 3, \"mc-backend-error-messages\", 5);\n        i0.ɵɵpipe(8, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(10, \"fieldset\");\n        i0.ɵɵelementStart(11, \"fieldset\", 7);\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"fieldset\", 7);\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"fieldset\", 7);\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵelementStart(18, \"a\", 11);\n        i0.ɵɵtext(19, \"Have an account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 12);\n        i0.ɵɵpipe(21, \"async\");\n        i0.ɵɵtext(22, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 4, ctx.backendErrors$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(8, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(21, 6, ctx.isSubmitting$));\n      }\n    },\n    directives: [i3.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.RouterLinkWithHref, i5.BackendErrorMessagesComponent],\n    pipes: [i3.AsyncPipe],\n    styles: [\".auth-page[_ngcontent-%COMP%]{background:#24252A;display:flex;justify-content:center;font-family:Montserrat,sans-serif;text-align:center;color:#f87777}.col[_ngcontent-%COMP%]{width:25vw;height:100vh;margin-top:10vh}.col[_ngcontent-%COMP%]   .error-text[_ngcontent-%COMP%]{color:#0088a9}.col[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#f87777;text-decoration:none;transition:all .2s ease 0s}.col[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#f7c6c6}.col[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{padding-bottom:30px}input[_ngcontent-%COMP%]{font-size:1.25vw}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}